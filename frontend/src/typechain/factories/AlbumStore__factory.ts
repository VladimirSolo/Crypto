/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AlbumStore, AlbumStoreInterface } from "../AlbumStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AlbumBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "OrderDelivered",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "addAlbum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "albums",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allAlbums",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
        ],
        internalType: "struct AlbumStore.Album[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delivered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderedAt",
        type: "uint256",
      },
      {
        internalType: "enum AlbumStore.OrderStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611f2b380380611f2b83398181016040528101906100329190610113565b61004c67e763dca4b5f7672f60c01b6100ad60201b60201c565b61006667656361c2e48f572260c01b6100ad60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b611ddc8061014f6000396000f3fe60806040526004361061009a5760003560e01c8063925931fc11610069578063d96a094a1161004e578063d96a094a1461029b578063ea5df059146102b7578063ec34297a146102f8576100ee565b8063925931fc1461022f578063a85c38ef1461025a576100ee565b806326987b60146101875780634b5e4108146101b25780636526deb1146101db5780638da5cb5b14610204576100ee565b366100ee576100b367458fb0b765d4512c60c01b610323565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e5906111ca565b60405180910390fd5b3480156100fa57600080fd5b5061010f67d570cf81709cb1f360c01b610323565b610123672f124cebf66f5b3360c01b610323565b61013767481fbda4e1c0308760c01b610323565b6101856000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610326565b005b34801561019357600080fd5b5061019c6103bf565b6040516101a99190611203565b60405180910390f35b3480156101be57600080fd5b506101d960048036038101906101d49190611254565b6103c5565b005b3480156101e757600080fd5b5061020260048036038101906101fd919061131c565b6106f6565b005b34801561021057600080fd5b5061021961096c565b60405161022691906113e5565b60405180910390f35b34801561023b57600080fd5b50610244610992565b6040516102519190611203565b60405180910390f35b34801561026657600080fd5b50610281600480360381019061027c9190611254565b610998565b604051610292959493929190611486565b60405180910390f35b6102b560048036038101906102b09190611254565b610a0b565b005b3480156102c357600080fd5b506102de60048036038101906102d99190611254565b610da8565b6040516102ef959493929190611558565b60405180910390f35b34801561030457600080fd5b5061030d610e76565b60405161031a9190611752565b60405180910390f35b50565b6103bc8160405160240161033a91906117c9565b6040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110c5565b50565b60025481565b6103d967d989c39c667f00fe60c01b610323565b6103ed6794e221591d9d4ffd60c01b610323565b610401675e0665b871d7473460c01b610323565b6104156733b154e376ce5fc960c01b610323565b610428664cc962cd4fb4d560c01b610323565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90611837565b60405180910390fd5b6104cc679760257c399e2a8c60c01b610323565b6104e06701950bbbdb341cb860c01b610323565b6104f467a1b820a74c34b38860c01b610323565b61050867bb2abf0be2b1074a60c01b610323565b61051c67c8e44cbedc9d3c5660c01b610323565b61053067a6b9d9b3e8354c0960c01b610323565b60006001828154811061054657610545611857565b5b9060005260206000209060050201905061056a67981aa35d7d4f074460c01b610323565b61057e67b1bf4e1a6a3e07e760c01b610323565b61059267aaebcada52c64adf60c01b610323565b6001808111156105a5576105a461140f565b5b8160040160009054906101000a900460ff1660018111156105c9576105c861140f565b5b03610609576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610600906118d2565b60405180910390fd5b61061d675f7b31728a0b4c7360c01b610323565b610631673bb41d29e441aa3160c01b610323565b60018160040160006101000a81548160ff021916908360018111156106595761065861140f565b5b0217905550610672674882d564f2a3173860c01b610323565b61068667bbd2b88bd830445960c01b610323565b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681600101547f5bb66d85e0b78294f5d62dcc373c22e3d67e643b319cba2fba58c8180008220b60405160405180910390a35050565b61070a671146efec905e915660c01b610323565b61071e6794e221591d9d4ffd60c01b610323565b610732675e0665b871d7473460c01b610323565b6107466733b154e376ce5fc960c01b610323565b610759664cc962cd4fb4d560c01b610323565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611837565b60405180910390fd5b6107fd679760257c399e2a8c60c01b610323565b6108116701950bbbdb341cb860c01b610323565b610825676b3cc8113fcd090560c01b610323565b6108396705760085046b221e60c01b610323565b61084d677604d1a703f5c96760c01b610323565b6108616750b8673b085823f460c01b610323565b60006040518060a00160405280600254815260200187815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001838152509080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001015560408201518160020190816109229190611b2d565b506060820151816003015560808201518160040155505061094d673e2329682838b6fe60c01b610323565b6002600081548092919061096090611c2e565b91905055505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600181815481106109a857600080fd5b90600052602060002090600502016000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b610a1f673fa5e62095238a7560c01b610323565b610a33673ed51962b03ec40660c01b610323565b610a47670a86980815b192c960c01b610323565b6000808281548110610a5c57610a5b611857565b5b90600052602060002090600502019050610a8067335fc83f2bd2321160c01b610323565b610a94671643278d3585ddd360c01b610323565b610aa8676062c9ce402b398260c01b610323565b80600301543414610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae590611cc2565b60405180910390fd5b610b0267a5427e4e7119810b60c01b610323565b610b1667945cf2f42ec4faeb60c01b610323565b610b2a67100914193216377860c01b610323565b610b3e6762e6ed4370d4490360c01b610323565b6000816004015411610b85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7c90611d2e565b60405180910390fd5b610b99670caa57cf528c3b6160c01b610323565b610bad67861c7f01fdfe3dee60c01b610323565b806004016000815480929190610bc290611d4e565b9190505550610bdb67fb65943b6ff1409260c01b610323565b610bef673e07c5f3ae5f903260c01b610323565b60016040518060a001604052806003548152602001836001015481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200160006001811115610c4457610c4361140f565b5b8152509080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690836001811115610d0057610cff61140f565b5b02179055505050610d1b67071a99531594bb5660c01b610323565b60036000815480929190610d2e90611c2e565b9190505550610d4767455865d67044f4c260c01b610323565b610d5b67ad6671320121879360c01b610323565b423373ffffffffffffffffffffffffffffffffffffffff1682600101547f428114751c1b5d2334d5f2464a79219ffc3a15d4a23042756994f6337fdccc1760405160405180910390a45050565b60008181548110610db857600080fd5b9060005260206000209060050201600091509050806000015490806001015490806002018054610de790611950565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1390611950565b8015610e605780601f10610e3557610100808354040283529160200191610e60565b820191906000526020600020905b815481529060010190602001808311610e4357829003601f168201915b5050505050908060030154908060040154905085565b6060610e8c67b70a785e2949b6da60c01b610323565b610ea067615184d98d7e795f60c01b610323565b610eb4670cc005700748318960c01b610323565b600080805490509050610ed167847d24d3188ced5f60c01b610323565b610ee5679341dd2b574aedc260c01b610323565b60008167ffffffffffffffff811115610f0157610f006118f2565b5b604051908082528060200260200182016040528015610f3a57816020015b610f2761110b565b815260200190600190039081610f1f5790505b509050610f5167c7a97da2af380c8760c01b610323565b610f6567b9d5f6e00291039660c01b610323565b60005b8281101561109457610f846749538c53582b1cd060c01b610323565b60008181548110610f9857610f97611857565b5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282018054610fd590611950565b80601f016020809104026020016040519081016040528092919081815260200182805461100190611950565b801561104e5780601f106110235761010080835404028352916020019161104e565b820191906000526020600020905b81548152906001019060200180831161103157829003601f168201915b505050505081526020016003820154815260200160048201548152505082828151811061107e5761107d611857565b5b6020026020010181905250806001019050610f68565b506110a967962e7f4c5c59e81560c01b610323565b6110bd67cbe50356cc063f5d60c01b610323565b809250505090565b6110dc816110d46110df611100565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b61113d819050919050565b6040518060a0016040528060008152602001600080191681526020016060815260200160008152602001600081525090565b611145611d77565b565b600082825260208201905092915050565b7f506c656173652075736520746865206275792066756e6374696f6e20746f207060008201527f7572636861736520616c62756d73210000000000000000000000000000000000602082015250565b60006111b4602f83611147565b91506111bf82611158565b604082019050919050565b600060208201905081810360008301526111e3816111a7565b9050919050565b6000819050919050565b6111fd816111ea565b82525050565b600060208201905061121860008301846111f4565b92915050565b600080fd5b600080fd5b611231816111ea565b811461123c57600080fd5b50565b60008135905061124e81611228565b92915050565b60006020828403121561126a5761126961121e565b5b60006112788482850161123f565b91505092915050565b6000819050919050565b61129481611281565b811461129f57600080fd5b50565b6000813590506112b18161128b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126112dc576112db6112b7565b5b8235905067ffffffffffffffff8111156112f9576112f86112bc565b5b602083019150836001820283011115611315576113146112c1565b5b9250929050565b6000806000806000608086880312156113385761133761121e565b5b6000611346888289016112a2565b955050602086013567ffffffffffffffff81111561136757611366611223565b5b611373888289016112c6565b945094505060406113868882890161123f565b92505060606113978882890161123f565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113cf826113a4565b9050919050565b6113df816113c4565b82525050565b60006020820190506113fa60008301846113d6565b92915050565b61140981611281565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061144f5761144e61140f565b5b50565b60008190506114608261143e565b919050565b600061147082611452565b9050919050565b61148081611465565b82525050565b600060a08201905061149b60008301886111f4565b6114a86020830187611400565b6114b560408301866113d6565b6114c260608301856111f4565b6114cf6080830184611477565b9695505050505050565b600081519050919050565b60005b838110156115025780820151818401526020810190506114e7565b60008484015250505050565b6000601f19601f8301169050919050565b600061152a826114d9565b6115348185611147565b93506115448185602086016114e4565b61154d8161150e565b840191505092915050565b600060a08201905061156d60008301886111f4565b61157a6020830187611400565b818103604083015261158c818661151f565b905061159b60608301856111f4565b6115a860808301846111f4565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115e7816111ea565b82525050565b6115f681611281565b82525050565b600082825260208201905092915050565b6000611618826114d9565b61162281856115fc565b93506116328185602086016114e4565b61163b8161150e565b840191505092915050565b600060a08301600083015161165e60008601826115de565b50602083015161167160208601826115ed565b5060408301518482036040860152611689828261160d565b915050606083015161169e60608601826115de565b5060808301516116b160808601826115de565b508091505092915050565b60006116c88383611646565b905092915050565b6000602082019050919050565b60006116e8826115b2565b6116f281856115bd565b935083602082028501611704856115ce565b8060005b85811015611740578484038952815161172185826116bc565b945061172c836116d0565b925060208a01995050600181019050611708565b50829750879550505050505092915050565b6000602082019050818103600083015261176c81846116dd565b905092915050565b600081519050919050565b600082825260208201905092915050565b600061179b82611774565b6117a5818561177f565b93506117b58185602086016114e4565b6117be8161150e565b840191505092915050565b600060208201905081810360008301526117e38184611790565b905092915050565b7f6e6f7420616e206f776e65722100000000000000000000000000000000000000600082015250565b6000611821600d83611147565b915061182c826117eb565b602082019050919050565b6000602082019050818103600083015261185081611814565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c696420737461747573000000000000000000000000000000000000600082015250565b60006118bc600e83611147565b91506118c782611886565b602082019050919050565b600060208201905081810360008301526118eb816118af565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196857607f821691505b60208210810361197b5761197a611921565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826119a6565b6119ed86836119a6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611a2a611a25611a20846111ea565b611a05565b6111ea565b9050919050565b6000819050919050565b611a4483611a0f565b611a58611a5082611a31565b8484546119b3565b825550505050565b600090565b611a6d611a60565b611a78818484611a3b565b505050565b5b81811015611a9c57611a91600082611a65565b600181019050611a7e565b5050565b601f821115611ae157611ab281611981565b611abb84611996565b81016020851015611aca578190505b611ade611ad685611996565b830182611a7d565b50505b505050565b600082821c905092915050565b6000611b0460001984600802611ae6565b1980831691505092915050565b6000611b1d8383611af3565b9150826002028217905092915050565b611b36826114d9565b67ffffffffffffffff811115611b4f57611b4e6118f2565b5b611b598254611950565b611b64828285611aa0565b600060209050601f831160018114611b975760008415611b85578287015190505b611b8f8582611b11565b865550611bf7565b601f198416611ba586611981565b60005b82811015611bcd57848901518255600182019150602085019450602081019050611ba8565b86831015611bea5784890151611be6601f891682611af3565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c39826111ea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c6b57611c6a611bff565b5b600182019050919050565b7f696e76616c696420707269636500000000000000000000000000000000000000600082015250565b6000611cac600d83611147565b9150611cb782611c76565b602082019050919050565b60006020820190508181036000830152611cdb81611c9f565b9050919050565b7f6f7574206f662073746f636b2100000000000000000000000000000000000000600082015250565b6000611d18600d83611147565b9150611d2382611ce2565b602082019050919050565b60006020820190508181036000830152611d4781611d0b565b9050919050565b6000611d59826111ea565b915060008203611d6c57611d6b611bff565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea264697066735822122028012e95951540071c8188cbbfdabaae3559330e39690dab773eff5cf55d51cb64736f6c634300081c0033";

type AlbumStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlbumStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlbumStore__factory extends ContractFactory {
  constructor(...args: AlbumStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      AlbumStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AlbumStore__factory {
    return super.connect(runner) as AlbumStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlbumStoreInterface {
    return new Interface(_abi) as AlbumStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AlbumStore {
    return new Contract(address, _abi, runner) as unknown as AlbumStore;
  }
}
